{"version":3,"sources":["js/svgxuse.js","js/serverless-form.js","index.js"],"names":["window","addEventListener","cache","checkUseElems","tid","winLoad","Object","create","debouncedCheck","clearTimeout","setTimeout","unobserveChanges","observeChanges","observer","MutationObserver","observe","document","documentElement","childList","subtree","attributes","disconnect","removeEventListener","ignore","createRequest","url","getOrigin","loc","a","undefined","protocol","createElement","href","replace","host","Request","origin","origin2","XMLHttpRequest","location","withCredentials","XDomainRequest","xlinkNS","base","bcr","hash","i","isHidden","uses","xhr","inProgressCount","observeIfDone","attrUpdateFunc","spec","useEl","setAttributeNS","hasAttribute","setAttribute","onloadFunc","body","svg","x","onload","innerHTML","responseText","getElementsByTagName","style","position","width","height","overflow","insertBefore","firstChild","onErrorTimeout","onerror","ontimeout","length","getBoundingClientRect","getAttribute","getAttributeNS","split","left","right","top","bottom","open","send","abort","readyState","name","querySelector","email","message","error","success","form","submit","e","preventDefault","setRequestHeader","onreadystatechange","DONE","status","data","value","content","console","log","display","JSON","stringify","lang","navigator","language","btn","sendForm","formButton","closeForm","openNav","closeNav","nav","navItems","querySelectorAll","classList","toggle","forEach","item","scrollChevron","presentationElement","getElementById","scrollTo","offsetTop"],"mappings":"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","file":"src.a8aaf2be.js","sourceRoot":"../src","sourcesContent":["(function () {\n    \"use strict\";\n    if (typeof window !== \"undefined\" && window.addEventListener) {\n        var cache = Object.create(null); // holds xhr objects to prevent multiple requests\n        var checkUseElems;\n        var tid; // timeout id\n        var debouncedCheck = function () {\n            clearTimeout(tid);\n            tid = setTimeout(checkUseElems, 100);\n        };\n        var unobserveChanges = function () {\n            return;\n        };\n        var observeChanges = function () {\n            var observer;\n            window.addEventListener(\"resize\", debouncedCheck, false);\n            window.addEventListener(\"orientationchange\", debouncedCheck, false);\n            if (window.MutationObserver) {\n                observer = new MutationObserver(debouncedCheck);\n                observer.observe(document.documentElement, {\n                    childList: true,\n                    subtree: true,\n                    attributes: true\n                });\n                unobserveChanges = function () {\n                    try {\n                        observer.disconnect();\n                        window.removeEventListener(\"resize\", debouncedCheck, false);\n                        window.removeEventListener(\"orientationchange\", debouncedCheck, false);\n                    } catch (ignore) {}\n                };\n            } else {\n                document.documentElement.addEventListener(\"DOMSubtreeModified\", debouncedCheck, false);\n                unobserveChanges = function () {\n                    document.documentElement.removeEventListener(\"DOMSubtreeModified\", debouncedCheck, false);\n                    window.removeEventListener(\"resize\", debouncedCheck, false);\n                    window.removeEventListener(\"orientationchange\", debouncedCheck, false);\n                };\n            }\n        };\n        var createRequest = function (url) {\n            // In IE 9, cross origin requests can only be sent using XDomainRequest.\n            // XDomainRequest would fail if CORS headers are not set.\n            // Therefore, XDomainRequest should only be used with cross origin requests.\n            function getOrigin(loc) {\n                var a;\n                if (loc.protocol !== undefined) {\n                    a = loc;\n                } else {\n                    a = document.createElement(\"a\");\n                    a.href = loc;\n                }\n                return a.protocol.replace(/:/g, \"\") + a.host;\n            }\n            var Request;\n            var origin;\n            var origin2;\n            if (window.XMLHttpRequest) {\n                Request = new XMLHttpRequest();\n                origin = getOrigin(location);\n                origin2 = getOrigin(url);\n                if (Request.withCredentials === undefined && origin2 !== \"\" && origin2 !== origin) {\n                    Request = XDomainRequest || undefined;\n                } else {\n                    Request = XMLHttpRequest;\n                }\n            }\n            return Request;\n        };\n        var xlinkNS = \"http://www.w3.org/1999/xlink\";\n        checkUseElems = function () {\n            var base;\n            var bcr;\n            var fallback = \"\"; // optional fallback URL in case no base path to SVG file was given and no symbol definition was found.\n            var hash;\n            var href;\n            var i;\n            var inProgressCount = 0;\n            var isHidden;\n            var Request;\n            var url;\n            var uses;\n            var xhr;\n            function observeIfDone() {\n                // If done with making changes, start watching for chagnes in DOM again\n                inProgressCount -= 1;\n                if (inProgressCount === 0) { // if all xhrs were resolved\n                    unobserveChanges(); // make sure to remove old handlers\n                    observeChanges(); // watch for changes to DOM\n                }\n            }\n            function attrUpdateFunc(spec) {\n                return function () {\n                    if (cache[spec.base] !== true) {\n                        spec.useEl.setAttributeNS(xlinkNS, \"xlink:href\", \"#\" + spec.hash);\n                        if (spec.useEl.hasAttribute(\"href\")) {\n                            spec.useEl.setAttribute(\"href\", \"#\" + spec.hash);\n                        }\n                    }\n                };\n            }\n            function onloadFunc(xhr) {\n                return function () {\n                    var body = document.body;\n                    var x = document.createElement(\"x\");\n                    var svg;\n                    xhr.onload = null;\n                    x.innerHTML = xhr.responseText;\n                    svg = x.getElementsByTagName(\"svg\")[0];\n                    if (svg) {\n                        svg.setAttribute(\"aria-hidden\", \"true\");\n                        svg.style.position = \"absolute\";\n                        svg.style.width = 0;\n                        svg.style.height = 0;\n                        svg.style.overflow = \"hidden\";\n                        body.insertBefore(svg, body.firstChild);\n                    }\n                    observeIfDone();\n                };\n            }\n            function onErrorTimeout(xhr) {\n                return function () {\n                    xhr.onerror = null;\n                    xhr.ontimeout = null;\n                    observeIfDone();\n                };\n            }\n            unobserveChanges(); // stop watching for changes to DOM\n            // find all use elements\n            uses = document.getElementsByTagName(\"use\");\n            for (i = 0; i < uses.length; i += 1) {\n                try {\n                    bcr = uses[i].getBoundingClientRect();\n                } catch (ignore) {\n                    // failed to get bounding rectangle of the use element\n                    bcr = false;\n                }\n                href = uses[i].getAttribute(\"href\")\n                        || uses[i].getAttributeNS(xlinkNS, \"href\")\n                        || uses[i].getAttribute(\"xlink:href\");\n                if (href && href.split) {\n                    url = href.split(\"#\");\n                } else {\n                    url = [\"\", \"\"];\n                }\n                base = url[0];\n                hash = url[1];\n                isHidden = bcr && bcr.left === 0 && bcr.right === 0 && bcr.top === 0 && bcr.bottom === 0;\n                if (bcr && bcr.width === 0 && bcr.height === 0 && !isHidden) {\n                    // the use element is empty\n                    // if there is a reference to an external SVG, try to fetch it\n                    // use the optional fallback URL if there is no reference to an external SVG\n                    if (fallback && !base.length && hash && !document.getElementById(hash)) {\n                        base = fallback;\n                    }\n                    if (uses[i].hasAttribute(\"href\")) {\n                        uses[i].setAttributeNS(xlinkNS, \"xlink:href\", href);\n                    }\n                    if (base.length) {\n                        // schedule updating xlink:href\n                        xhr = cache[base];\n                        if (xhr !== true) {\n                            // true signifies that prepending the SVG was not required\n                            setTimeout(attrUpdateFunc({\n                                useEl: uses[i],\n                                base: base,\n                                hash: hash\n                            }), 0);\n                        }\n                        if (xhr === undefined) {\n                            Request = createRequest(base);\n                            if (Request !== undefined) {\n                                xhr = new Request();\n                                cache[base] = xhr;\n                                xhr.onload = onloadFunc(xhr);\n                                xhr.onerror = onErrorTimeout(xhr);\n                                xhr.ontimeout = onErrorTimeout(xhr);\n                                xhr.open(\"GET\", base);\n                                xhr.send();\n                                inProgressCount += 1;\n                            }\n                        }\n                    }\n                } else {\n                    if (!isHidden) {\n                        if (cache[base] === undefined) {\n                            // remember this URL if the use element was not empty and no request was sent\n                            cache[base] = true;\n                        } else if (cache[base].onload) {\n                            // if it turns out that prepending the SVG is not necessary,\n                            // abort the in-progress xhr.\n                            cache[base].abort();\n                            delete cache[base].onload;\n                            cache[base] = true;\n                        }\n                    } else if (base.length && cache[base]) {\n                        setTimeout(attrUpdateFunc({\n                            useEl: uses[i],\n                            base: base,\n                            hash: hash\n                        }), 0);\n                    }\n                }\n            }\n            uses = \"\";\n            inProgressCount += 1;\n            observeIfDone();\n        };\n        var winLoad;\n        winLoad = function () {\n            window.removeEventListener(\"load\", winLoad, false); // to prevent memory leaks\n            tid = setTimeout(checkUseElems, 0);\n        };\n        if (document.readyState !== \"complete\") {\n            // The load event fires when all resources have finished loading, which allows detecting whether SVG use elements are empty.\n            window.addEventListener(\"load\", winLoad, false);\n        } else {\n            // No need to add a listener if the document is already loaded, initialize immediately.\n            winLoad();\n        }\n    }\n}());","let name = document.querySelector(\"#name\");\nlet email = document.querySelector(\"#email\");\nlet message = document.querySelector(\"#message\");\nlet error = document.querySelector(\".error\");\nlet success = document.querySelector(\".success\");\nlet form = document.querySelector(\".items\");\n\n\n\nexport default function submit(e) {\n  e.preventDefault();\n\n  var xhr = new XMLHttpRequest();\n  xhr.open(\"POST\", \"https://70v84a3rwi.execute-api.eu-west-1.amazonaws.com/prod/email/send\", true);\n\n  xhr.setRequestHeader(\"Content-type\", \"application/json\");\n  xhr.onreadystatechange = function() {\n    if (xhr.readyState == XMLHttpRequest.DONE && xhr.status == 200) {\n    }\n  };\n  var data = {\n    name: name.value,\n    email: email.value,\n    content: message.value\n  };\n\n  console.log(data);\n\n  if (name.value && email.value && message.value) {\n    success.style.display = \"block\";\n    form.innerHTML = \"Votre message à bien été envoyé.<br>En attendant, n'hésitez pas à me rejoindre sur les réseaux sociaux!!\";\n    setTimeout(function() {\n        document.querySelector(\".all\").style.display = \"none\";\n        xhr.send(JSON.stringify(data));\n    }, 5000); \n\n  } else {\n      error.style.display = \"block\";\n      error.innerHTML = \"Please Fill  All Details\";\n  }\n}","import './sass/main.scss';\nimport './js/svgxuse';\nimport sendForm from './js/serverless-form';\n\ndocument.documentElement.lang = navigator.language;\n\nlet btn = document.querySelector(\".btn--submit\");\n\nbtn.addEventListener(\"click\", sendForm);\n\nconst formButton = document.querySelector(\".cta\");\nconst closeForm = document.querySelector('.items__close');\nconst openNav = document.querySelector('.nav__icon');\nconst closeNav = document.querySelector('.menu__items__close');\nconst nav = document.querySelector('.nav__menu');\nconst navItems = document.querySelectorAll('.nav-items');\n\nformButton.addEventListener('click', function() {\n    document.querySelector('.all').style.display = 'block';\n});\n\ncloseForm.addEventListener('click', function() {\n    document.querySelector('.all').style.display = 'none'; \n});\n\nopenNav.addEventListener('click', function() {\n    nav.classList.toggle('hidden');\n    \n});\ncloseNav.addEventListener('click', function() {\n    nav.classList.toggle('hidden'); \n});\n\nnavItems.forEach(function(item) {\n    item.addEventListener('click', function(e) {\n        nav.classList.toggle('hidden');  \n    });\n});\n\nconst scrollChevron = document.querySelector(\".icon-chevron-thin-down\");\nconst presentationElement = document.getElementById(\"presentation\");\n\nscrollChevron.addEventListener('click', function() {\n\n    window.scrollTo(0, presentationElement.offsetTop - 40);\n\n});"]}